buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}
plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // querydsl 플러그인 추가
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

repositories {
    mavenCentral()
}

dependencies {

    // 웹 + 기본 설정
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'
    
    //mysql
    implementation 'mysql:mysql-connector-java'
    
    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    
    //oauth 인증용도
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    
    //메일 인증 용도
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    
    //시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    
    //jwt 인증 용도
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    
    //lombok 
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //swagger 용도
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}" // querydsl라이브러리 추가



}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl" // querydsl에서 사용할 경로 선언

querydsl { // querydsl 설정 추가
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets { // 빌드시 사용할 sourceset 추가
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}